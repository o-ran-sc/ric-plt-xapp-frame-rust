/*
 * RIC subscription
 *
 * This is the initial REST API for RIC subscription
 *
 * The version of the OpenAPI document: 0.0.4
 *
 * Generated by: https://openapi-generator.tech
 */

use serde_derive::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ActionToBeSetup {
    #[serde(rename = "ActionID")]
    pub action_id: u32,
    #[serde(rename = "ActionType")]
    pub action_type: ActionType,
    /// E2SM byte array. ActionDefinition is an OPTIONAL IE
    #[serde(rename = "ActionDefinition", skip_serializing_if = "Option::is_none")]
    pub action_definition: Option<Vec<i32>>,
    #[serde(rename = "SubsequentAction", skip_serializing_if = "Option::is_none")]
    pub subsequent_action: Option<Box<crate::models::SubsequentAction>>,
}

impl ActionToBeSetup {
    pub fn new(action_id: u32, action_type: ActionType) -> ActionToBeSetup {
        ActionToBeSetup {
            action_id,
            action_type,
            action_definition: None,
            subsequent_action: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ActionType {
    #[serde(rename = "insert")]
    Insert,
    #[serde(rename = "policy")]
    Policy,
    #[serde(rename = "report")]
    Report,
}

impl Default for ActionType {
    fn default() -> ActionType {
        Self::Insert
    }
}
