/*
 * RIC subscription
 *
 * This is the initial REST API for RIC subscription
 *
 * The version of the OpenAPI document: 0.0.4
 *
 * Generated by: https://openapi-generator.tech
 */

use serde_derive::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SubscriptionData {
    #[serde(rename = "SubscriptionId", skip_serializing_if = "Option::is_none")]
    pub subscription_id: Option<i32>,
    #[serde(rename = "Meid", skip_serializing_if = "Option::is_none")]
    pub meid: Option<String>,
    #[serde(rename = "ClientEndpoint", skip_serializing_if = "Option::is_none")]
    pub client_endpoint: Option<Vec<String>>,
    #[serde(
        rename = "SubscriptionInstances",
        skip_serializing_if = "Option::is_none"
    )]
    pub subscription_instances: Option<Vec<crate::models::SubscriptionInstance>>,
}

impl SubscriptionData {
    pub fn new() -> SubscriptionData {
        SubscriptionData {
            subscription_id: None,
            meid: None,
            client_endpoint: None,
            subscription_instances: None,
        }
    }
}
