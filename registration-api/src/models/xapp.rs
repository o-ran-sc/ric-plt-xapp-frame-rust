/*
 * RIC appmgr
 *
 * This is a draft API for RIC appmgr
 *
 * The version of the OpenAPI document: 0.3.3
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Xapp {
    #[serde(rename = "name")]
    pub name: String,
    /// xapp status in the RIC
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "instances", skip_serializing_if = "Option::is_none")]
    pub instances: Option<Vec<crate::models::XappInstance>>,
}

impl Xapp {
    pub fn new(name: String) -> Xapp {
        Xapp {
            name,
            status: None,
            version: None,
            instances: None,
        }
    }
}

/// xapp status in the RIC
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "deployed")]
    Deployed,
    #[serde(rename = "deleted")]
    Deleted,
    #[serde(rename = "superseded")]
    Superseded,
    #[serde(rename = "failed")]
    Failed,
    #[serde(rename = "deleting")]
    Deleting,
}

impl Default for Status {
    fn default() -> Status {
        Self::Unknown
    }
}

