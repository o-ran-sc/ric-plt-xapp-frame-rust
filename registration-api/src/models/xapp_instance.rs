/*
 * RIC appmgr
 *
 * This is a draft API for RIC appmgr
 *
 * The version of the OpenAPI document: 0.3.3
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct XappInstance {
    #[serde(rename = "name")]
    pub name: String,
    /// xapp instance status
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    #[serde(rename = "ip", skip_serializing_if = "Option::is_none")]
    pub ip: Option<String>,
    #[serde(rename = "port", skip_serializing_if = "Option::is_none")]
    pub port: Option<i32>,
    #[serde(rename = "txMessages", skip_serializing_if = "Option::is_none")]
    pub tx_messages: Option<Vec<String>>,
    #[serde(rename = "rxMessages", skip_serializing_if = "Option::is_none")]
    pub rx_messages: Option<Vec<String>>,
    #[serde(rename = "policies", skip_serializing_if = "Option::is_none")]
    pub policies: Option<Vec<i32>>,
}

impl XappInstance {
    pub fn new(name: String) -> XappInstance {
        XappInstance {
            name,
            status: None,
            ip: None,
            port: None,
            tx_messages: None,
            rx_messages: None,
            policies: None,
        }
    }
}

/// xapp instance status
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "running")]
    Running,
    #[serde(rename = "succeeded")]
    Succeeded,
    #[serde(rename = "failed")]
    Failed,
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "completed")]
    Completed,
    #[serde(rename = "crashLoopBackOff")]
    CrashLoopBackOff,
}

impl Default for Status {
    fn default() -> Status {
        Self::Pending
    }
}

